@page "/payments/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Payment</h3>
<hr />
<br />
<EditForm Model="@payment" OnValidSubmit="CreatePayment">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Amount: </label>
        <div>
            <InputNumber @bind-Value="payment.Amount" class="form-control" />
            <ValidationMessage For="@(()=> payment.Amount)" />
        </div>
    </div>

    <div class="form-group">
        <label>Payment Type: </label>
        <div>
            <InputRadioGroup @bind-Value="payment.Type" class="form-control">
                @foreach (var type in paymentType)
                {
                    <InputRadio Value="type" /> @type <br />
                }
            </InputRadioGroup>
        </div>
        <br />
        <hr />
        <span id="type"></span>
    </div>

    <button type="submit" class=" btn btn-success btn-block">
        Create Payment
    </button>
</EditForm>

@code {
    Payment payment = new Payment();

    private IList<Payment> Payments;

    List<string> paymentType = new List<string> { "Credit/Debit Card", "PayPal", "Cash" };

    protected async override Task OnInitializedAsync()
    {
        Payments = await _client.GetFromJsonAsync<List<Payment>>($"{Endpoints.PaymentsEndpoint}");
    }

    private async Task CreatePayment()
    {
        await _client.PostAsJsonAsync(Endpoints.PaymentsEndpoint, payment);
        _navManager.NavigateTo("/payments/");
    }
}
